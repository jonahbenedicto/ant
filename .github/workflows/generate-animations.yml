name: Generate Langton's Ant Animations

on:
  schedule:
    # Run daily at 8 AM UTC
    - cron: '0 8 * * *'
    # Weekly full generation on Sunday
    - cron: '0 8 * * 0'
  
  workflow_dispatch:
    inputs:
      asset_type:
        description: 'Type of asset to generate'
        required: false
        default: 'contribution'
        type: choice
        options:
        - contribution  # User's GitHub contribution pattern
        - random       # Random grid demo (auto mode)
        - ant       # Single ant on empty grid demo
        - all          # Generate all asset types
      
      generations:
        description: 'Number of generations'
        required: false
        default: '60'
      
      frame_duration:
        description: 'Animation speed (milliseconds per frame)'
        required: false
        default: '800'
      
      initial_display_duration:
        description: 'Time to show initial pattern (milliseconds)'
        required: false
        default: '3000'
      
      show_progress_bar:
        description: 'Show progress bar below animation'
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  actions: read

jobs:
  generate:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: 📁 Prepare assets directory
      run: |
        mkdir -p assets
        echo "Assets directory ready"
    
    - name: 🧹 Clean previous animations
      run: |
        echo "🧹 Cleaning previous Langton's Ant files..."
        # Remove files older than 7 days
        find assets/ -name "langtons-ant-*.svg" -mtime +7 -delete 2>/dev/null || true
        
        echo "✨ Cleanup complete"
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔨 Build project
      run: npm run build
    
    - name: 🎮 Generate animations
      run: |
        set -e  # Exit immediately if a command exits with a non-zero status
        
        ASSET_TYPE="${{ github.event.inputs.asset_type || 'contribution' }}"
        USERNAME="${{ github.repository_owner }}"
        GENERATIONS="${{ github.event.inputs.generations || '60' }}"
        FRAME_DURATION="${{ github.event.inputs.frame_duration || '800' }}"
        INITIAL_DISPLAY_DURATION="${{ github.event.inputs.initial_display_duration || '3000' }}"
        SHOW_PROGRESS_BAR="${{ github.event.inputs.show_progress_bar || 'true' }}"
        
        echo "🐜 Generating Langton's Ant animation..."
        echo "👤 User: $USERNAME"
        echo "🎯 Asset Type: $ASSET_TYPE"
        echo "🔢 Generations: $GENERATIONS"
        echo "⏱️ Frame Duration: ${FRAME_DURATION}ms"
        echo "⏳ Initial Display: ${INITIAL_DISPLAY_DURATION}ms"
        echo "📊 Progress Bar: $SHOW_PROGRESS_BAR"
        
        # Build base command arguments
        PROGRESS_BAR_FLAG=""
        if [ "$SHOW_PROGRESS_BAR" = "true" ]; then
          PROGRESS_BAR_FLAG="--show-progress-bar"
        fi
        
        # Function to run command with error handling
        run_generation() {
          local description="$1"
          local output_file="$2"
          shift 2
          
          echo "$description"
          if node dist/cli/command-line.js "$@"; then
            echo "✅ Successfully generated $output_file"
            if [ -f "$output_file" ]; then
              echo "📁 File size: $(ls -lh "$output_file" | awk '{print $5}')"
            else
              echo "⚠️ Warning: Expected file $output_file was not created"
            fi
          else
            echo "❌ Failed to generate $output_file"
            exit 1
          fi
        }
        
        case "$ASSET_TYPE" in
          "contribution")
            run_generation \
              "📊 Generating contribution-based Langton's Ant..." \
              "assets/langtons-ant-contribution.svg" \
              --username "$USERNAME" \
              --output "assets/langtons-ant-contribution.svg" \
              --pattern "langtons-ant" \
              --langtons-ant-mode "contribution" \
              --ant-count "-1" \
              --generations "$GENERATIONS" \
              --frame-duration "$FRAME_DURATION" \
              --initial-display-duration "$INITIAL_DISPLAY_DURATION" \
              $PROGRESS_BAR_FLAG \
              --github-token "${{ secrets.GITHUB_TOKEN }}"
            ;;
          "random")
            run_generation \
              "🎲 Generating random grid demo..." \
              "assets/langtons-ant-random.svg" \
              --username "$USERNAME" \
              --output "assets/langtons-ant-random.svg" \
              --pattern "langtons-ant" \
              --langtons-ant-mode "random" \
              --generations "$GENERATIONS" \
              --frame-duration "$FRAME_DURATION" \
              --initial-display-duration "$INITIAL_DISPLAY_DURATION" \
              $PROGRESS_BAR_FLAG \
              --github-token ""
            ;;
          "ant")
            run_generation \
              "🐜 Generating single ant demo..." \
              "assets/langtons-ant.svg" \
              --username "$USERNAME" \
              --output "assets/langtons-ant.svg" \
              --pattern "langtons-ant" \
              --langtons-ant-mode "empty" \
              --ant-count "1" \
              --generations "$GENERATIONS" \
              --frame-duration "$FRAME_DURATION" \
              --initial-display-duration "$INITIAL_DISPLAY_DURATION" \
              $PROGRESS_BAR_FLAG \
              --github-token ""
            ;;
          "all")
            echo "🌟 Generating all asset types..."
            
            # Generate contribution-based animation
            run_generation \
              "📊 [1/3] Generating contribution-based Langton's Ant..." \
              "assets/langtons-ant-contribution.svg" \
              --username "$USERNAME" \
              --output "assets/langtons-ant-contribution.svg" \
              --pattern "langtons-ant" \
              --langtons-ant-mode "contribution" \
              --ant-count "-1" \
              --generations "$GENERATIONS" \
              --frame-duration "$FRAME_DURATION" \
              --initial-display-duration "$INITIAL_DISPLAY_DURATION" \
              $PROGRESS_BAR_FLAG \
              --github-token "${{ secrets.GITHUB_TOKEN }}"
            
            # Generate random grid demo
            run_generation \
              "🎲 [2/3] Generating random grid demo..." \
              "assets/langtons-ant-random.svg" \
              --username "$USERNAME" \
              --output "assets/langtons-ant-random.svg" \
              --pattern "langtons-ant" \
              --langtons-ant-mode "random" \
              --generations "$GENERATIONS" \
              --frame-duration "$FRAME_DURATION" \
              --initial-display-duration "$INITIAL_DISPLAY_DURATION" \
              $PROGRESS_BAR_FLAG \
              --no-cleanup \
              --github-token ""
            
            # Generate single ant demo
            run_generation \
              "🐜 [3/3] Generating single ant demo..." \
              "assets/langtons-ant.svg" \
              --username "$USERNAME" \
              --output "assets/langtons-ant.svg" \
              --pattern "langtons-ant" \
              --langtons-ant-mode "empty" \
              --ant-count "1" \
              --generations "$GENERATIONS" \
              --frame-duration "$FRAME_DURATION" \
              --initial-display-duration "$INITIAL_DISPLAY_DURATION" \
              $PROGRESS_BAR_FLAG \
              --no-cleanup \
              --github-token ""
            
            echo "🎯 All three animations completed successfully!"
            ;;
          *)
            echo "❌ Invalid asset type: $ASSET_TYPE"
            exit 1
            ;;
        esac
        
        echo "✅ Animation generation complete"
        echo "📁 Generated files in assets/:"
        ls -la assets/langtons-ant-*.svg || echo "No files found"
    
    - name: 💾 Commit generated files
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "Langton's Ant Bot"
        
        git add assets/
        
        if ! git diff --staged --quiet; then
          ASSET_TYPE="${{ github.event.inputs.asset_type || 'contribution' }}"
          DATE=$(date '+%Y-%m-%d')
          
          case "$ASSET_TYPE" in
            "contribution")
              git commit -m "📊 Generate contribution-based Langton's Ant - $DATE" \
                         -m "Generated Langton's Ant animation based on GitHub contribution graph"
              ;;
            "random")
              git commit -m "🎲 Generate random grid Langton's Ant demo - $DATE" \
                         -m "Generated demo with random grid and auto-spawned ants"
              ;;
            "ant")
              git commit -m "🐜 Generate single ant Langton's Ant demo - $DATE" \
                         -m "Generated demo with single ant on empty grid"
              ;;
            "all")
              git commit -m "🌟 Generate all Langton's Ant animations - $DATE" \
                         -m "Generated complete set: contribution, random grid demo, and single ant demo"
              ;;
          esac
          
          git push
          echo "✅ Successfully updated animations!"
        else
          echo "🔍 No changes to commit"
        fi
    
    - name: 📊 Summary
      run: |
        echo "🐜 Langton's Ant workflow complete!"
        echo "📅 Date: $(date)"
        echo "👤 User: ${{ github.repository_owner }}"
        echo "🎯 Asset Type: ${{ github.event.inputs.asset_type || 'contribution' }}"
        echo ""
        echo "📁 Generated files:"
        ls -la assets/langtons-ant-*.svg 2>/dev/null || echo "No Langton's Ant files found"
# Updated Sun Jun  8 22:44:55 AEST 2025.
